version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15
    container_name: fintech-postgres
    environment:
      POSTGRES_DB: fintech
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data/schemas/postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - fintech-network

  # Cache
  redis:
    image: redis:7-alpine
    container_name: fintech-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fintech-network

  # Message Queue
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: fintech-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - fintech-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: fintech-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
    networks:
      - fintech-network

  # API Gateway
  api-gateway:
    build: ./api-gateway
    container_name: fintech-api-gateway
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/fintech
      - REDIS_URL=redis://redis:6379
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - postgres
      - redis
      - kafka
    volumes:
      - ./api-gateway:/app
    networks:
      - fintech-network

  # ML Service
  ml-service:
    build: ./ml-service
    container_name: fintech-ml-service
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/fintech
      - REDIS_URL=redis://redis:6379
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - postgres
      - redis
      - kafka
    volumes:
      - ./ml-service:/app
      - ./data/ml_models:/app/models
    networks:
      - fintech-network

  # Go Service
  go-service:
    build: ./go-service
    container_name: fintech-go-service
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/fintech
      - REDIS_URL=redis://redis:6379
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - postgres
      - redis
      - kafka
    volumes:
      - ./go-service:/app
    networks:
      - fintech-network

  # Java Service
  java-service:
    build: ./java-service
    container_name: fintech-java-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/fintech
      - SPRING_REDIS_HOST=redis
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - postgres
      - redis
      - kafka
    volumes:
      - ./java-service:/app
    networks:
      - fintech-network

  # Frontend
  frontend:
    build: ./frontend
    container_name: fintech-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - api-gateway
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - fintech-network

volumes:
  postgres_data:
  redis_data:
  kafka_data:
  zookeeper_data:

networks:
  fintech-network:
    driver: bridge 